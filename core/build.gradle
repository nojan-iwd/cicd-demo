import com.github.jengelman.gradle.plugins.shadow.transformers.PropertiesFileTransformer

plugins {
    alias libs.plugins.shadow
    alias libs.plugins.spring.boot
    alias libs.plugins.spring.boot.thin.launcher
    alias libs.plugins.graalvm.native
}

dependencies {
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    compileOnly 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    developmentOnly 'org.springframework.cloud:spring-cloud-starter-function-web'
    runtimeOnly libs.postgres
    runtimeOnly libs.sybase

    implementation 'com.fasterxml.jackson.core:jackson-databind'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
    implementation 'io.awspring.cloud:spring-cloud-aws-starter'
    implementation 'io.awspring.cloud:spring-cloud-aws-starter-secrets-manager'
    implementation 'jakarta.validation:jakarta.validation-api'
    implementation 'org.apache.commons:commons-lang3'
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-logging'
    implementation 'org.springframework.cloud:spring-cloud-function-adapter-aws'
    implementation 'org.springframework.cloud:spring-cloud-function-context'
    implementation project(':common')

    testAnnotationProcessor 'org.projectlombok:lombok'

    testImplementation 'org.junit.platform:junit-platform-launcher'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'org.testcontainers:postgresql'
    testImplementation libs.instancio
    testImplementation libs.archunit
    testImplementation testFixtures(project(':common'))
}

// See: https://cloud.spring.io/spring-cloud-static/spring-cloud-function/3.0.0.M1/aws.html
assemble.dependsOn = [thinJar, shadowJar]
shadowJar.mustRunAfter thinJar
shadowJar {
    archiveClassifier = 'aws'
    manifest {
        inheritFrom(project.tasks.thinJar.manifest)
    }

    // Workaround for: https://github.com/johnrengelman/shadow/issues/448
    project.configurations.implementation.canBeResolved = true
    project.configurations.runtimeOnly.canBeResolved = true
    configurations = [project.configurations.implementation, project.configurations.runtimeOnly]

    mergeServiceFiles()
    append 'META-INF/spring.handlers'
    append 'META-INF/spring.schemas'
    append 'META-INF/spring.tooling'
    append 'META-INF/spring/org.springframework.boot.autoconfigure.AutoConfiguration.imports'
    append 'META-INF/spring/org.springframework.boot.actuate.autoconfigure.web.ManagementContextConfiguration.imports'

    transform(PropertiesFileTransformer) {
        paths = ['META-INF/spring.factories']
        mergeStrategy = "append"
    }
}

// See: https://graalvm.github.io/native-build-tools/latest/gradle-plugin.html#quickstart
graalvmNative {
    binaries {
        main {
            imageName = 'core'
            mainClass = 'com.element.enterpriseapi.core.CoreApplication'
            buildArgs.addAll('--verbose', '-O4')
        }
        test {
            buildArgs.addAll('--verbose', '-O0')
        }
    }
}

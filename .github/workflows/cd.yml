name: QA Deployment

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    name: Build and Deploy
    runs-on: ubuntu-latest
    environment:
      name: dev

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: "21"
          distribution: "temurin"

      - name: Grant Execute Permission to Gradlew
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew build

      - name: Upload Core's Lambda Function Artifact
        uses: actions/upload-artifact@v4
        with:
          name: lambda-core-zip
          path: ./core/build/libs/core-0.0.1-SNAPSHOT-aws.jar

  deploy:
    name: Deploy to the DEV Environment
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: dev

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download Core's Lambda Function Artifact
        uses: actions/download-artifact@v4
        with:
          name: lambda-core-zip
          path: ./cdk-deployment/assets/dev

      - name: Install jq
        run: |
          sudo apt-get update
          sudo apt-get install -y jq

      - name: Setup CDK TypeScript
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ vars.AWS_DEFAULT_REGION }}
        run: |
          cd cdk-deployment && npm install

          aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID && \
          aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY && \
          aws configure set default.region $AWS_DEFAULT_REGION && \
          aws configure set output json

          jq --slurp '
            .[0] as $file1 |
            .[1] as $file2 |
            $file1 | .context += $file2
          ' cdk.json contexts/core-mutation.json > temp-core.json

      - name: Deploy Core Module with CDK TypeScript
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ vars.AWS_DEFAULT_REGION }}
        run: |
          cd cdk-deployment
          mv temp-core.json cdk.json
          npx cdk deploy -c env=dev --all --require-approval never